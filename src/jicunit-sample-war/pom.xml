<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jicunit</groupId>
  <artifactId>jicunit-sample-war</artifactId>
  <version>0.1.0</version>
  <name>jicunit-sample-war</name>
  <description>Sample WAR for Java In-container Unit (JICUnit). </description>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jicunit.version>0.1.0</jicunit.version>
  </properties>

  <dependencies>

    
    <!-- JUnit and JicUnit jars must be included in the WAR since the tests 
      shall execute in the container -->
    <dependency>
      <groupId>org.jicunit</groupId>
      <artifactId>jicunit-framework</artifactId>
      <version>${jicunit.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <version>1.0.3</version>
      <scope>compile</scope>
    </dependency>

          
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <excludes>
            <exclude>**/*</exclude>
          </excludes>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.jicunit</groupId>
        <artifactId>jicunit-maven-plugin</artifactId>
        <version>${jicunit.version}</version>
        <executions>
          <execution>
            <id>jicunit-enabling-war</id>
            <goals>
              <goal>jicunit-war</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/Test*.class</include>
                <include>**/*Test.class</include>
                <include>**/*Suite.class</include>
              </includes>
            </configuration>
          </execution>
        </executions>
     </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <webResources>
            <!-- Also include the test classes to the WAR -->
            <resource>
              <directory>${project.build.directory}/test-classes</directory>
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!--  use weblogic as the container -->
      <plugin>
        <groupId>com.oracle.weblogic</groupId> 
        <artifactId>weblogic-maven-plugin</artifactId> 
        <version>12.1.3-0-0</version> 
        <!--
        You can find and redefine the following variables in the parent pom file arccording to your environment.
  
        oracleMiddlewareHome
        oracleServerUrl
        oracleUsername
        oraclePassword
        oracleServerName
        -->
        <configuration> 
          <middlewareHome>${oracleMiddlewareHome}</middlewareHome>
        </configuration> 
        <executions>
          <!--Deploy the application to the server-->
          <execution>
            <phase>pre-integration-test</phase> 
            <goals> 
              <goal>redeploy</goal> 
            </goals>
            <configuration> 
              <!--The admin URL where the app is deployed. Here use the plugin's default value t3://localhost:7001-->
              <!--adminurl>${oracleServerUrl}</adminurl-->
              <user>weblogic</user> 
              <password>welcome1</password>
              <!--The location of the file or directory to be deployed-->
              <source>${project.build.directory}/${project.build.finalName}.${project.packaging}</source>
              <!--The target servers where the application is deployed. Here use the plugin's default value AdminServer-->
              <!--targets>${oracleServerName}</targets-->
              <verbose>true</verbose> 
              <targets>myserver</targets>
              <upload>true</upload>
              <name>${project.build.finalName}</name>
            </configuration> 
          </execution> 
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>execute-integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
                <include>**/Test*.java</include>
                <include>**/*Suite.java</include>
              </includes>
              <systemPropertyVariables>
                <jicunit.url>http://localhost:7001/jicunit-sample-war-${project.version}/tests</jicunit.url>
              </systemPropertyVariables>
              <forkedProcessTimeoutInSeconds>7200</forkedProcessTimeoutInSeconds>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- use jetty for the JEE container -->
      <!-- start it with mvn jetty:run-forked , it will pick up the WAR in the Maven 
        project automatically -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.1.v20140609</version>
        <configuration>
          <!-- Remote debug flags -->
          <jvmArgs>-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n</jvmArgs>
          <stopPort>8081</stopPort>
          <stopKey>welcome</stopKey>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <contextPath>/integrationtest-war</contextPath>
          <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
          <webApp>
            <contextPath>/integrationtest-war</contextPath>
            <overrideDescriptor>src/main/jetty-setup/override-web.xml</overrideDescriptor>
            <jettyEnvXml>src/main/jetty-setup/jetty-env.xml</jettyEnvXml>
          </webApp>
          <contextXml>src/main/jetty-setup/jetty-context.xml</contextXml>
          <!-- include tests classes for the WAR -->
          <useTestScope>true</useTestScope>
        </configuration>
        <executions>
<!--           <execution> -->
<!--             <id>jetty-run</id> -->
<!--             <goals> -->
<!--               <goal>run</goal> -->
<!--             </goals> -->
<!--             <configuration> -->
<!--               <scanIntervalSeconds>10</scanIntervalSeconds> -->
<!--               <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory> -->
<!--               <webApp> -->
<!--                 <contextPath>/integrationtest-war</contextPath> -->
<!--                 <overrideDescriptor>src/main/jetty-setup/override-web.xml</overrideDescriptor> -->
<!--                 <jettyEnvXml>src/main/jetty-setup/jetty-env.xml</jettyEnvXml> -->
<!--               </webApp> -->
<!--               <contextXml>src/main/jetty-setup/jetty-context.xml</contextXml> -->
<!--               <useTestScope>true</useTestScope> -->
<!--             </configuration> -->
<!--           </execution> -->
          <execution>
            <id>jetty-run-forked</id>
            <goals>
              <goal>run-forked</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <!-- JSF support in Jetty -->
          <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>2.1.20</version>
          </dependency>
          <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>2.1.3</version>
          </dependency>
          <!-- CDI support in Jetty -->
          <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet</artifactId>
            <version>2.2.0.SP1</version>
            <exclusions>
              <exclusion>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-api</artifactId>
              </exclusion>
            </exclusions>
          </dependency>                           
        </dependencies>
      </plugin>
    </plugins>
  </build>

</project>
